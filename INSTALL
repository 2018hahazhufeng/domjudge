DOMjudge INSTALLATION INSTRUCTIONS
==================================


SYSTEM REQUIREMENTS
-------------------

This judging system was developed and tested on GNU/Linux systems,
specifically on Debian Woody and RedHat 9. We have tried to use 
standard UNIX utilities and libraries, so this system should be
reasonably portable to other Unix systems, but we have not done any
tests, so nothing guaranteed...

For the deployment of this jury-system, there are some requirements:

- A TCP/IP network which connects all jury and team computers.
  Extra network security which restricts internet access and access to
  other services (ssh, mail, talk, etc..) is advisable, but not
  provided by this software.

TODO: list of necessary protocols between different parts of the system.

- One jury account with a homedirectory which is shared between all
  jury-computers (e.g. via NFS).
  
- Team accounts which are accessible via SSH on the jurycomputers
  (a SSH public key of the jury account should be installed on all team
   accounts to provide public-key access).

- (Local) root access on the jury-computers (preferably also on the
  shared homedirectory) for (un)mounting proc and installing some
  programs setuid-root.


SOFTWARE REQUIREMENTS
---------------------

- gcc with standard libraries

- make

- For every supported programming language a compiler is needed,
  which can generate statically linked standalone executables.

- A webserver which supports PHP >= 4.1.0

- MySQL 3.23.x or higher database and client software

- PHP >= 4.1.0, located in /usr/bin/php (command line interface)

- Bash 2, located in /bin/bash

- Statically compiled Bash 2 (included for Linux IA32)

- glibc 2.1 or higher

- A lot of standard (GNU) programs, a probably incomplete list:
	hostname, date, dirname, basename, touch, chmod, cp, mv, cat,
	grep, diff, wc, mkdir, mkfifo, mount, sleep, head, tail

- sudo

- OpenSSH/SCP (or a compatible ssh/scp client/daemon)


FILE LOCATIONS
--------------

There are three different directory trees which must be set up and
configured, before the beginning of a contest. The root paths of these
directory trees should be set in the main config file. (Directories in
uppercase are configuration variables, which can be set to different
locations (even within different roots, although not tested!)).

SYSTEM_ROOT
	The judging system itself is contained in this directory tree. All
	programs needed for the judging system are located here alongside
	some extra utilities and the configuration of the system.

INPUT_ROOT
	The problem input and output testdata should be put here. This
	directory-tree is for input only, so (in principle) this directory
	tree can be read-only.

	Each problem should have its own directory within INPUT_ROOT,
	where input and output testdata have to be placed.

OUTPUT_ROOT
	Placed here are all submission files, logfiles and temporary
	files, made while testing submissions. The following directories
	should be present within OUTPUT_ROOT:

	LOGDIR        contains all logfiles.
	INCOMINGDIR   contains submission files, being submitted or where
	              a submission error has occurred.
	SUBMITDIR     contains all correctly submitted files.
	JUDGEDIR      place where submissions are tested, each in its own
	              subdirectory. The system needs root access to this
	              directory! (for chroot and mounting of proc-fs).


CONFIGURATION
-------------

Configuration of the judge system is mostly done by editing the
global configuration file in SYSTEM_ROOT/etc/global.cfg. This file
contains the configuration data for all programs within the
system. To implement configuration changes, these settings should be
converted to the different language-specific configuration-files,
needed by different parts of the system. This is done by running the
command 'generate_config.sh' in the configuration directory. After
that, also all C/C++ programs should be rebuilt to implement these
changes!

The global configuration file has a ini-file like syntax, with some
extensions to make it more flexible and to be able to correctly convert
variables to all specific configuration files. See comments there for
more information.

Configuration of the compilers of the supported languages should be
done separately. For each supported language a bash shell-script named
'compile_<lang>.sh' should be made and placed in SYSTEM_ROOT/judge,
where <lang> is the ID of the language as specified in the
database. For more information, see for example compile_c.sh and
test_solution.sh for syntax in SYSTEM_ROOT/judge.





$Id$
