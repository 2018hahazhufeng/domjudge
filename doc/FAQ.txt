DOMjudge FAQ
============

This is a general FAQ covering all (possible) problems we have
encountered during installation, testing, running, etc. of this
DOMjudge jury-system. If you run into problems not mentioned here, you
can always contact us (see domjudge.sourceforge.net for contact
information). If we have time, we'll try to help. Furthermore any
feedback on problems you ran into and solved is very welcome!


- Chroot environment and Java compilers

With the default config, submitted programs are run within a minimal
chroot environment. For this the programs have to be statically
linked, because they do not have access to shared libraries.

For most languages, compilers support this, but for Java, this is a
bit problematic. The Sun Java compiler 'javac' isn't even a real
compiler: a bytecode interpreter 'java' is needed to run the binaries
and thus this cannot simply run in a chroot environment.

There are some options to support java as a language:

1. One can disable the chroot environment in 'etc/global.cfg' by
   setting 'USE_CHROOT=0'. Disabling the chroot environment removes
   this extra layer of security against submissions that attempt to
   cheat, but it is a simple solution to getting java to work.

2. Next, one can build a bigger chroot environment which contains all
   necessary ingredients to let Sun java work within it. DOMjudge
   supports this with some manual setup.

   First of all, a chroot tree with java support must be created. The
   script bin/make_chroot.sh creates one from Debian GNU/Linux
   sources; run that script without arguments for basic usage
   information. Next, edit the script 'judge/chroot-startstop.sh' and
   adapt it to work with your local system and uncomment the script in
   'etc/global.cfg'.

3. As an alternative the 'gcj' compiler from GNU can be used instead
   of Sun's version. This one generates true machine code and can link
   statically. However a few function calls cannot be linked
   statically (see 'GCJ compiler warnings' in this FAQ). Secondly, the
   static library 'libgcj.a' doesn't seem to be included in all
   GNU/Linux distributions: at least not in RedHat Enterprise 4.


- The Sun Java virtual machine (jvm) and memory limits

DOMjudge imposes memory limits on submitted solutions. These limits
are imposed before the compiled submissions are started. On the other
hand, the Sun jvm is started via a compile-time generated script which
is run as a wrapper around the program. This means that the memory
limits imposed by DOMjudge are for the jvm and the running program
within it. As the jvm uses approximately 200MB, this reduces the limit
by this significant amount. See judge/compile_java_javac.sh for the
implementation details.


- GCJ compiler warnings

When using the GNU GCJ compiler for compiling Java sources, it can
give a whole lot of warning messages of the form

/usr/lib/gcc-lib/i386-linux/3.2.3/libgcj.a(gc_dlopen.o)(.text+0xbc): In function `GC_dlopen':
: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking

These are generated because you are trying to compile statically
linked sources, but some functions can not be static, e.g. the
`dlopen' function above. These are _warnings_ and can be safely
ignored, because under normal programming contest conditions people
are not allowed to use these functions anyways (and they are not
accessible within the chroot-ed environment the program is run in).

To filter these warnings, take a look at judge/compile_java_gcjmod.sh
and replace or symlink judge/compile_java.sh by/to this file.


- Permissions for the webserver

Make sure that the webserver serving the DOMjudge webinterface pages
has correct permissions to the SYSTEM_ROOT/{www,lib,etc} directory
trees. The 'www' and 'lib' trees can safely set to be readable and
accessible. Care should be taken with the 'etc' dir: 'config.php' and
'passwords.php' should be readable, but 'passwords.php' should best
not be readable by anyone else. This can be done for example by
setting the SYSTEM_ROOT/etc directory to owner:group
<DOMjudge account>:<Webserver group> and permissions drwxr-x---,
denying users other than yourself and the webserver group access to the
configuration and password files. Of course a looser or tighter scheme
can be applied.

Furthermore, the webserver must have write access to the INCOMINGDIR to
place websubmissions (if used). This can also be done by making that
directory group-owned and -writeable by the webserver group.


- Error: "submit_copy.sh failed with exitcode XX"

This error can have various causes. First of all: check the
'submit.log' file for more complete error messages.

Assuming the default configuration where submit_copy.sh uses 'scp', we
have found that shell initialisation scripts might contain statements,
which generate errors: scp runs the user's default shell when copying
submission files and when the shell dies (e.g. because of not having a
terminal), the copying fails.

Another cause might be that you do not have automatic access to the
team's account (e.g. using ssh keys).


$Id$
