# Global Makefile
#
# $Id$
#
# Put here all things that need or can be defined globally, like
# standard targets (clean, etc.) and global variables.

# Prevent this file from being included more than once
ifndef GLOBALINCLUDED
GLOBALINCLUDED=1

# Default C/C++ compiler flags
CXXFLAGS = -O2 -Wall
CFLAGS = $(CXXFLAGS) -lm

# How to execute a command as root:
ROOTCMD=su root -c
# alternatively:
#ROOTCMD=sudo -u root /bin/bash -c

# Where to install setuid root binaries: (default: own directory)
SUIDINSTALLDIR=$(CURDIR)

# Define the 'default' target here: because of inclusion of this file,
# it will be the default target in all subdirectories and we default to
# no automatic targets when calling 'make' unless overridden.
default:

TEMPFILEDIR = $(TOPDIR)/bin
TEMPFILE = $(TEMPFILEDIR)/tempfile

$(TEMPFILE):
	$(MAKE) -C $(TEMPFILEDIR) tempfile

# Helper target to read DBNAME from config:
finddbname: fixconfig
	$(eval DBNAME=$(shell source $(TOPDIR)/etc/config.sh ; echo $$DBNAME))

# Extra phony target to generate up-to-date config for finddbname.
# Needed because running this in finddbname seems broken: old file
# contents is used in the next command then.
fixconfig:
	$(MAKE) -C $(TOPDIR)/etc config.sh

clean: clean-backupfiles

distclean: clean

clean-backupfiles:
	rm -f *~

.PHONY: default build config install check clean clean-backupfiles distclean \
        finddbname fixconfig

endif # GLOBALINCLUDED
